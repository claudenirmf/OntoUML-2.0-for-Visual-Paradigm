/*
 * generated by Xtext 2.13.0
 */
grammar InternalOntoUML;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package it.unibz.inf.ontouml.xtext.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package it.unibz.inf.ontouml.xtext.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import it.unibz.inf.ontouml.xtext.services.OntoUMLGrammarAccess;

}
@parser::members {
	private OntoUMLGrammarAccess grammarAccess;

	public void setGrammarAccess(OntoUMLGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleModel
entryRuleModel
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getModelAccess().getGroup()); }
		(rule__Model__Group__0)
		{ after(grammarAccess.getModelAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleModelElement
entryRuleModelElement
:
{ before(grammarAccess.getModelElementRule()); }
	 ruleModelElement
{ after(grammarAccess.getModelElementRule()); } 
	 EOF 
;

// Rule ModelElement
ruleModelElement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getModelElementAccess().getAlternatives()); }
		(rule__ModelElement__Alternatives)
		{ after(grammarAccess.getModelElementAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOntoUMLClass
entryRuleOntoUMLClass
:
{ before(grammarAccess.getOntoUMLClassRule()); }
	 ruleOntoUMLClass
{ after(grammarAccess.getOntoUMLClassRule()); } 
	 EOF 
;

// Rule OntoUMLClass
ruleOntoUMLClass 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOntoUMLClassAccess().getGroup()); }
		(rule__OntoUMLClass__Group__0)
		{ after(grammarAccess.getOntoUMLClassAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleGeneralization
entryRuleGeneralization
:
{ before(grammarAccess.getGeneralizationRule()); }
	 ruleGeneralization
{ after(grammarAccess.getGeneralizationRule()); } 
	 EOF 
;

// Rule Generalization
ruleGeneralization 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getGeneralizationAccess().getGroup()); }
		(rule__Generalization__Group__0)
		{ after(grammarAccess.getGeneralizationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleGeneralizationSet
entryRuleGeneralizationSet
:
{ before(grammarAccess.getGeneralizationSetRule()); }
	 ruleGeneralizationSet
{ after(grammarAccess.getGeneralizationSetRule()); } 
	 EOF 
;

// Rule GeneralizationSet
ruleGeneralizationSet 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getGeneralizationSetAccess().getGroup()); }
		(rule__GeneralizationSet__Group__0)
		{ after(grammarAccess.getGeneralizationSetAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule EndurantType
ruleEndurantType
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEndurantTypeAccess().getAlternatives()); }
		(rule__EndurantType__Alternatives)
		{ after(grammarAccess.getEndurantTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelElement__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelElementAccess().getOntoUMLClassParserRuleCall_0()); }
		ruleOntoUMLClass
		{ after(grammarAccess.getModelElementAccess().getOntoUMLClassParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getModelElementAccess().getGeneralizationParserRuleCall_1()); }
		ruleGeneralization
		{ after(grammarAccess.getModelElementAccess().getGeneralizationParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getModelElementAccess().getGeneralizationSetParserRuleCall_2()); }
		ruleGeneralizationSet
		{ after(grammarAccess.getModelElementAccess().getGeneralizationSetParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EndurantType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEndurantTypeAccess().getNoneEnumLiteralDeclaration_0()); }
		('none')
		{ after(grammarAccess.getEndurantTypeAccess().getNoneEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getEndurantTypeAccess().getKindEnumLiteralDeclaration_1()); }
		('kind')
		{ after(grammarAccess.getEndurantTypeAccess().getKindEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getEndurantTypeAccess().getRelatorKindEnumLiteralDeclaration_2()); }
		('relatorKind')
		{ after(grammarAccess.getEndurantTypeAccess().getRelatorKindEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getEndurantTypeAccess().getModeKindEnumLiteralDeclaration_3()); }
		('modeKind')
		{ after(grammarAccess.getEndurantTypeAccess().getModeKindEnumLiteralDeclaration_3()); }
	)
	|
	(
		{ before(grammarAccess.getEndurantTypeAccess().getQualityKindEnumLiteralDeclaration_4()); }
		('qualityKind')
		{ after(grammarAccess.getEndurantTypeAccess().getQualityKindEnumLiteralDeclaration_4()); }
	)
	|
	(
		{ before(grammarAccess.getEndurantTypeAccess().getSubkindEnumLiteralDeclaration_5()); }
		('subkind')
		{ after(grammarAccess.getEndurantTypeAccess().getSubkindEnumLiteralDeclaration_5()); }
	)
	|
	(
		{ before(grammarAccess.getEndurantTypeAccess().getRoleEnumLiteralDeclaration_6()); }
		('role')
		{ after(grammarAccess.getEndurantTypeAccess().getRoleEnumLiteralDeclaration_6()); }
	)
	|
	(
		{ before(grammarAccess.getEndurantTypeAccess().getPhaseEnumLiteralDeclaration_7()); }
		('phase')
		{ after(grammarAccess.getEndurantTypeAccess().getPhaseEnumLiteralDeclaration_7()); }
	)
	|
	(
		{ before(grammarAccess.getEndurantTypeAccess().getCategoryEnumLiteralDeclaration_8()); }
		('category')
		{ after(grammarAccess.getEndurantTypeAccess().getCategoryEnumLiteralDeclaration_8()); }
	)
	|
	(
		{ before(grammarAccess.getEndurantTypeAccess().getMixinEnumLiteralDeclaration_9()); }
		('mixin')
		{ after(grammarAccess.getEndurantTypeAccess().getMixinEnumLiteralDeclaration_9()); }
	)
	|
	(
		{ before(grammarAccess.getEndurantTypeAccess().getRoleMixinEnumLiteralDeclaration_10()); }
		('roleMixin')
		{ after(grammarAccess.getEndurantTypeAccess().getRoleMixinEnumLiteralDeclaration_10()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__0__Impl
	rule__Model__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getModelKeyword_0()); }
	'Model'
	{ after(grammarAccess.getModelAccess().getModelKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__1__Impl
	rule__Model__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getModelAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__2__Impl
	rule__Model__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getElementsAssignment_2()); }
	(rule__Model__ElementsAssignment_2)
	{ after(grammarAccess.getModelAccess().getElementsAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__3__Impl
	rule__Model__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getGroup_3()); }
	(rule__Model__Group_3__0)*
	{ after(grammarAccess.getModelAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getModelAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group_3__0__Impl
	rule__Model__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getCommaKeyword_3_0()); }
	','
	{ after(grammarAccess.getModelAccess().getCommaKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getElementsAssignment_3_1()); }
	(rule__Model__ElementsAssignment_3_1)
	{ after(grammarAccess.getModelAccess().getElementsAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OntoUMLClass__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OntoUMLClass__Group__0__Impl
	rule__OntoUMLClass__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OntoUMLClass__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOntoUMLClassAccess().get_typeAssignment_0()); }
	(rule__OntoUMLClass___typeAssignment_0)?
	{ after(grammarAccess.getOntoUMLClassAccess().get_typeAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OntoUMLClass__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OntoUMLClass__Group__1__Impl
	rule__OntoUMLClass__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OntoUMLClass__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOntoUMLClassAccess().getClassKeyword_1()); }
	'Class'
	{ after(grammarAccess.getOntoUMLClassAccess().getClassKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OntoUMLClass__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OntoUMLClass__Group__2__Impl
	rule__OntoUMLClass__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__OntoUMLClass__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOntoUMLClassAccess().getNameAssignment_2()); }
	(rule__OntoUMLClass__NameAssignment_2)
	{ after(grammarAccess.getOntoUMLClassAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OntoUMLClass__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OntoUMLClass__Group__3__Impl
	rule__OntoUMLClass__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__OntoUMLClass__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOntoUMLClassAccess().getAliasAssignment_3()); }
	(rule__OntoUMLClass__AliasAssignment_3)?
	{ after(grammarAccess.getOntoUMLClassAccess().getAliasAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OntoUMLClass__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OntoUMLClass__Group__4__Impl
	rule__OntoUMLClass__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__OntoUMLClass__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOntoUMLClassAccess().getGroup_4()); }
	(rule__OntoUMLClass__Group_4__0)?
	{ after(grammarAccess.getOntoUMLClassAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OntoUMLClass__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OntoUMLClass__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OntoUMLClass__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOntoUMLClassAccess().getGroup_5()); }
	(rule__OntoUMLClass__Group_5__0)?
	{ after(grammarAccess.getOntoUMLClassAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OntoUMLClass__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OntoUMLClass__Group_4__0__Impl
	rule__OntoUMLClass__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OntoUMLClass__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOntoUMLClassAccess().getSupersKeyword_4_0()); }
	'supers...'
	{ after(grammarAccess.getOntoUMLClassAccess().getSupersKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OntoUMLClass__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OntoUMLClass__Group_4__1__Impl
	rule__OntoUMLClass__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OntoUMLClass__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOntoUMLClassAccess().getLeftCurlyBracketKeyword_4_1()); }
	'{'
	{ after(grammarAccess.getOntoUMLClassAccess().getLeftCurlyBracketKeyword_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OntoUMLClass__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OntoUMLClass__Group_4__2__Impl
	rule__OntoUMLClass__Group_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__OntoUMLClass__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOntoUMLClassAccess().getGeneralizationsToSuperclassesAssignment_4_2()); }
	(rule__OntoUMLClass__GeneralizationsToSuperclassesAssignment_4_2)
	{ after(grammarAccess.getOntoUMLClassAccess().getGeneralizationsToSuperclassesAssignment_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OntoUMLClass__Group_4__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OntoUMLClass__Group_4__3__Impl
	rule__OntoUMLClass__Group_4__4
;
finally {
	restoreStackSize(stackSize);
}

rule__OntoUMLClass__Group_4__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOntoUMLClassAccess().getGroup_4_3()); }
	(rule__OntoUMLClass__Group_4_3__0)*
	{ after(grammarAccess.getOntoUMLClassAccess().getGroup_4_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OntoUMLClass__Group_4__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OntoUMLClass__Group_4__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OntoUMLClass__Group_4__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOntoUMLClassAccess().getRightCurlyBracketKeyword_4_4()); }
	'}'
	{ after(grammarAccess.getOntoUMLClassAccess().getRightCurlyBracketKeyword_4_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OntoUMLClass__Group_4_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OntoUMLClass__Group_4_3__0__Impl
	rule__OntoUMLClass__Group_4_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OntoUMLClass__Group_4_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOntoUMLClassAccess().getCommaKeyword_4_3_0()); }
	','
	{ after(grammarAccess.getOntoUMLClassAccess().getCommaKeyword_4_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OntoUMLClass__Group_4_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OntoUMLClass__Group_4_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OntoUMLClass__Group_4_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOntoUMLClassAccess().getGeneralizationsToSuperclassesAssignment_4_3_1()); }
	(rule__OntoUMLClass__GeneralizationsToSuperclassesAssignment_4_3_1)
	{ after(grammarAccess.getOntoUMLClassAccess().getGeneralizationsToSuperclassesAssignment_4_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OntoUMLClass__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OntoUMLClass__Group_5__0__Impl
	rule__OntoUMLClass__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OntoUMLClass__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOntoUMLClassAccess().getSubsKeyword_5_0()); }
	'subs...'
	{ after(grammarAccess.getOntoUMLClassAccess().getSubsKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OntoUMLClass__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OntoUMLClass__Group_5__1__Impl
	rule__OntoUMLClass__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OntoUMLClass__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOntoUMLClassAccess().getLeftCurlyBracketKeyword_5_1()); }
	'{'
	{ after(grammarAccess.getOntoUMLClassAccess().getLeftCurlyBracketKeyword_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OntoUMLClass__Group_5__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OntoUMLClass__Group_5__2__Impl
	rule__OntoUMLClass__Group_5__3
;
finally {
	restoreStackSize(stackSize);
}

rule__OntoUMLClass__Group_5__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOntoUMLClassAccess().getGeneralizationsToSubclassesAssignment_5_2()); }
	(rule__OntoUMLClass__GeneralizationsToSubclassesAssignment_5_2)
	{ after(grammarAccess.getOntoUMLClassAccess().getGeneralizationsToSubclassesAssignment_5_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OntoUMLClass__Group_5__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OntoUMLClass__Group_5__3__Impl
	rule__OntoUMLClass__Group_5__4
;
finally {
	restoreStackSize(stackSize);
}

rule__OntoUMLClass__Group_5__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOntoUMLClassAccess().getGroup_5_3()); }
	(rule__OntoUMLClass__Group_5_3__0)*
	{ after(grammarAccess.getOntoUMLClassAccess().getGroup_5_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OntoUMLClass__Group_5__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OntoUMLClass__Group_5__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OntoUMLClass__Group_5__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOntoUMLClassAccess().getRightCurlyBracketKeyword_5_4()); }
	'}'
	{ after(grammarAccess.getOntoUMLClassAccess().getRightCurlyBracketKeyword_5_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OntoUMLClass__Group_5_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OntoUMLClass__Group_5_3__0__Impl
	rule__OntoUMLClass__Group_5_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OntoUMLClass__Group_5_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOntoUMLClassAccess().getCommaKeyword_5_3_0()); }
	','
	{ after(grammarAccess.getOntoUMLClassAccess().getCommaKeyword_5_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OntoUMLClass__Group_5_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OntoUMLClass__Group_5_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OntoUMLClass__Group_5_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOntoUMLClassAccess().getGeneralizationsToSubclassesAssignment_5_3_1()); }
	(rule__OntoUMLClass__GeneralizationsToSubclassesAssignment_5_3_1)
	{ after(grammarAccess.getOntoUMLClassAccess().getGeneralizationsToSubclassesAssignment_5_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Generalization__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Generalization__Group__0__Impl
	rule__Generalization__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Generalization__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGeneralizationAccess().getGeneralizationKeyword_0()); }
	'Generalization'
	{ after(grammarAccess.getGeneralizationAccess().getGeneralizationKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Generalization__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Generalization__Group__1__Impl
	rule__Generalization__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Generalization__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGeneralizationAccess().getNameAssignment_1()); }
	(rule__Generalization__NameAssignment_1)
	{ after(grammarAccess.getGeneralizationAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Generalization__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Generalization__Group__2__Impl
	rule__Generalization__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Generalization__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGeneralizationAccess().getAliasAssignment_2()); }
	(rule__Generalization__AliasAssignment_2)?
	{ after(grammarAccess.getGeneralizationAccess().getAliasAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Generalization__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Generalization__Group__3__Impl
	rule__Generalization__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Generalization__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGeneralizationAccess().getSuperclassKeyword_3()); }
	'superclass'
	{ after(grammarAccess.getGeneralizationAccess().getSuperclassKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Generalization__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Generalization__Group__4__Impl
	rule__Generalization__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Generalization__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGeneralizationAccess().getSuperclassAssignment_4()); }
	(rule__Generalization__SuperclassAssignment_4)
	{ after(grammarAccess.getGeneralizationAccess().getSuperclassAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Generalization__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Generalization__Group__5__Impl
	rule__Generalization__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Generalization__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGeneralizationAccess().getSubclassKeyword_5()); }
	'subclass'
	{ after(grammarAccess.getGeneralizationAccess().getSubclassKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Generalization__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Generalization__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Generalization__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGeneralizationAccess().getSubclassAssignment_6()); }
	(rule__Generalization__SubclassAssignment_6)
	{ after(grammarAccess.getGeneralizationAccess().getSubclassAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__GeneralizationSet__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GeneralizationSet__Group__0__Impl
	rule__GeneralizationSet__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralizationSet__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGeneralizationSetAccess().getIsDisjointAssignment_0()); }
	(rule__GeneralizationSet__IsDisjointAssignment_0)
	{ after(grammarAccess.getGeneralizationSetAccess().getIsDisjointAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralizationSet__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GeneralizationSet__Group__1__Impl
	rule__GeneralizationSet__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralizationSet__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGeneralizationSetAccess().getIsCompleteAssignment_1()); }
	(rule__GeneralizationSet__IsCompleteAssignment_1)
	{ after(grammarAccess.getGeneralizationSetAccess().getIsCompleteAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralizationSet__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GeneralizationSet__Group__2__Impl
	rule__GeneralizationSet__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralizationSet__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGeneralizationSetAccess().getGeneralizationSetKeyword_2()); }
	'GeneralizationSet'
	{ after(grammarAccess.getGeneralizationSetAccess().getGeneralizationSetKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralizationSet__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GeneralizationSet__Group__3__Impl
	rule__GeneralizationSet__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralizationSet__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGeneralizationSetAccess().getNameAssignment_3()); }
	(rule__GeneralizationSet__NameAssignment_3)
	{ after(grammarAccess.getGeneralizationSetAccess().getNameAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralizationSet__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GeneralizationSet__Group__4__Impl
	rule__GeneralizationSet__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralizationSet__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGeneralizationSetAccess().getAliasAssignment_4()); }
	(rule__GeneralizationSet__AliasAssignment_4)?
	{ after(grammarAccess.getGeneralizationSetAccess().getAliasAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralizationSet__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GeneralizationSet__Group__5__Impl
	rule__GeneralizationSet__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralizationSet__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGeneralizationSetAccess().getGeneralizationsKeyword_5()); }
	'generalizations'
	{ after(grammarAccess.getGeneralizationSetAccess().getGeneralizationsKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralizationSet__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GeneralizationSet__Group__6__Impl
	rule__GeneralizationSet__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralizationSet__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGeneralizationSetAccess().getLeftCurlyBracketKeyword_6()); }
	'{'
	{ after(grammarAccess.getGeneralizationSetAccess().getLeftCurlyBracketKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralizationSet__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GeneralizationSet__Group__7__Impl
	rule__GeneralizationSet__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralizationSet__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGeneralizationSetAccess().getGeneralizationsAssignment_7()); }
	(rule__GeneralizationSet__GeneralizationsAssignment_7)
	{ after(grammarAccess.getGeneralizationSetAccess().getGeneralizationsAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralizationSet__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GeneralizationSet__Group__8__Impl
	rule__GeneralizationSet__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralizationSet__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGeneralizationSetAccess().getGroup_8()); }
	(rule__GeneralizationSet__Group_8__0)*
	{ after(grammarAccess.getGeneralizationSetAccess().getGroup_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralizationSet__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GeneralizationSet__Group__9__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralizationSet__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGeneralizationSetAccess().getRightCurlyBracketKeyword_9()); }
	'}'
	{ after(grammarAccess.getGeneralizationSetAccess().getRightCurlyBracketKeyword_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__GeneralizationSet__Group_8__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GeneralizationSet__Group_8__0__Impl
	rule__GeneralizationSet__Group_8__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralizationSet__Group_8__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGeneralizationSetAccess().getCommaKeyword_8_0()); }
	','
	{ after(grammarAccess.getGeneralizationSetAccess().getCommaKeyword_8_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralizationSet__Group_8__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GeneralizationSet__Group_8__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralizationSet__Group_8__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGeneralizationSetAccess().getGeneralizationsAssignment_8_1()); }
	(rule__GeneralizationSet__GeneralizationsAssignment_8_1)
	{ after(grammarAccess.getGeneralizationSetAccess().getGeneralizationsAssignment_8_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Model__ElementsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getElementsModelElementParserRuleCall_2_0()); }
		ruleModelElement
		{ after(grammarAccess.getModelAccess().getElementsModelElementParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__ElementsAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getElementsModelElementParserRuleCall_3_1_0()); }
		ruleModelElement
		{ after(grammarAccess.getModelAccess().getElementsModelElementParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OntoUMLClass___typeAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOntoUMLClassAccess().get_typeEndurantTypeEnumRuleCall_0_0()); }
		ruleEndurantType
		{ after(grammarAccess.getOntoUMLClassAccess().get_typeEndurantTypeEnumRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OntoUMLClass__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOntoUMLClassAccess().getNameIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getOntoUMLClassAccess().getNameIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OntoUMLClass__AliasAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOntoUMLClassAccess().getAliasSTRINGTerminalRuleCall_3_0()); }
		RULE_STRING
		{ after(grammarAccess.getOntoUMLClassAccess().getAliasSTRINGTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OntoUMLClass__GeneralizationsToSuperclassesAssignment_4_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOntoUMLClassAccess().getGeneralizationsToSuperclassesGeneralizationCrossReference_4_2_0()); }
		(
			{ before(grammarAccess.getOntoUMLClassAccess().getGeneralizationsToSuperclassesGeneralizationIDTerminalRuleCall_4_2_0_1()); }
			RULE_ID
			{ after(grammarAccess.getOntoUMLClassAccess().getGeneralizationsToSuperclassesGeneralizationIDTerminalRuleCall_4_2_0_1()); }
		)
		{ after(grammarAccess.getOntoUMLClassAccess().getGeneralizationsToSuperclassesGeneralizationCrossReference_4_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OntoUMLClass__GeneralizationsToSuperclassesAssignment_4_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOntoUMLClassAccess().getGeneralizationsToSuperclassesGeneralizationCrossReference_4_3_1_0()); }
		(
			{ before(grammarAccess.getOntoUMLClassAccess().getGeneralizationsToSuperclassesGeneralizationIDTerminalRuleCall_4_3_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getOntoUMLClassAccess().getGeneralizationsToSuperclassesGeneralizationIDTerminalRuleCall_4_3_1_0_1()); }
		)
		{ after(grammarAccess.getOntoUMLClassAccess().getGeneralizationsToSuperclassesGeneralizationCrossReference_4_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OntoUMLClass__GeneralizationsToSubclassesAssignment_5_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOntoUMLClassAccess().getGeneralizationsToSubclassesGeneralizationCrossReference_5_2_0()); }
		(
			{ before(grammarAccess.getOntoUMLClassAccess().getGeneralizationsToSubclassesGeneralizationIDTerminalRuleCall_5_2_0_1()); }
			RULE_ID
			{ after(grammarAccess.getOntoUMLClassAccess().getGeneralizationsToSubclassesGeneralizationIDTerminalRuleCall_5_2_0_1()); }
		)
		{ after(grammarAccess.getOntoUMLClassAccess().getGeneralizationsToSubclassesGeneralizationCrossReference_5_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OntoUMLClass__GeneralizationsToSubclassesAssignment_5_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOntoUMLClassAccess().getGeneralizationsToSubclassesGeneralizationCrossReference_5_3_1_0()); }
		(
			{ before(grammarAccess.getOntoUMLClassAccess().getGeneralizationsToSubclassesGeneralizationIDTerminalRuleCall_5_3_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getOntoUMLClassAccess().getGeneralizationsToSubclassesGeneralizationIDTerminalRuleCall_5_3_1_0_1()); }
		)
		{ after(grammarAccess.getOntoUMLClassAccess().getGeneralizationsToSubclassesGeneralizationCrossReference_5_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Generalization__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGeneralizationAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getGeneralizationAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Generalization__AliasAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGeneralizationAccess().getAliasSTRINGTerminalRuleCall_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getGeneralizationAccess().getAliasSTRINGTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Generalization__SuperclassAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGeneralizationAccess().getSuperclassOntoUMLClassCrossReference_4_0()); }
		(
			{ before(grammarAccess.getGeneralizationAccess().getSuperclassOntoUMLClassIDTerminalRuleCall_4_0_1()); }
			RULE_ID
			{ after(grammarAccess.getGeneralizationAccess().getSuperclassOntoUMLClassIDTerminalRuleCall_4_0_1()); }
		)
		{ after(grammarAccess.getGeneralizationAccess().getSuperclassOntoUMLClassCrossReference_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Generalization__SubclassAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGeneralizationAccess().getSubclassOntoUMLClassCrossReference_6_0()); }
		(
			{ before(grammarAccess.getGeneralizationAccess().getSubclassOntoUMLClassIDTerminalRuleCall_6_0_1()); }
			RULE_ID
			{ after(grammarAccess.getGeneralizationAccess().getSubclassOntoUMLClassIDTerminalRuleCall_6_0_1()); }
		)
		{ after(grammarAccess.getGeneralizationAccess().getSubclassOntoUMLClassCrossReference_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralizationSet__IsDisjointAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGeneralizationSetAccess().getIsDisjointDisjointKeyword_0_0()); }
		(
			{ before(grammarAccess.getGeneralizationSetAccess().getIsDisjointDisjointKeyword_0_0()); }
			'disjoint'
			{ after(grammarAccess.getGeneralizationSetAccess().getIsDisjointDisjointKeyword_0_0()); }
		)
		{ after(grammarAccess.getGeneralizationSetAccess().getIsDisjointDisjointKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralizationSet__IsCompleteAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGeneralizationSetAccess().getIsCompleteCompleteKeyword_1_0()); }
		(
			{ before(grammarAccess.getGeneralizationSetAccess().getIsCompleteCompleteKeyword_1_0()); }
			'complete'
			{ after(grammarAccess.getGeneralizationSetAccess().getIsCompleteCompleteKeyword_1_0()); }
		)
		{ after(grammarAccess.getGeneralizationSetAccess().getIsCompleteCompleteKeyword_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralizationSet__NameAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGeneralizationSetAccess().getNameIDTerminalRuleCall_3_0()); }
		RULE_ID
		{ after(grammarAccess.getGeneralizationSetAccess().getNameIDTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralizationSet__AliasAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGeneralizationSetAccess().getAliasSTRINGTerminalRuleCall_4_0()); }
		RULE_STRING
		{ after(grammarAccess.getGeneralizationSetAccess().getAliasSTRINGTerminalRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralizationSet__GeneralizationsAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGeneralizationSetAccess().getGeneralizationsGeneralizationCrossReference_7_0()); }
		(
			{ before(grammarAccess.getGeneralizationSetAccess().getGeneralizationsGeneralizationIDTerminalRuleCall_7_0_1()); }
			RULE_ID
			{ after(grammarAccess.getGeneralizationSetAccess().getGeneralizationsGeneralizationIDTerminalRuleCall_7_0_1()); }
		)
		{ after(grammarAccess.getGeneralizationSetAccess().getGeneralizationsGeneralizationCrossReference_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralizationSet__GeneralizationsAssignment_8_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGeneralizationSetAccess().getGeneralizationsGeneralizationCrossReference_8_1_0()); }
		(
			{ before(grammarAccess.getGeneralizationSetAccess().getGeneralizationsGeneralizationIDTerminalRuleCall_8_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getGeneralizationSetAccess().getGeneralizationsGeneralizationIDTerminalRuleCall_8_1_0_1()); }
		)
		{ after(grammarAccess.getGeneralizationSetAccess().getGeneralizationsGeneralizationCrossReference_8_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
